@page "/Articles/Delete/{Id:int}"

@inject IArticleRepository repository
@inject NavigationManager NavigationManager
@inject IJSRuntime JS

<h3>Delete</h3>

<div class="container">
    <div class="row">
        <div class="col-md-12">

            <EditForm Model="Model">
                <div class="form-group">

                    <MatTextField Label="ID" @bind-Value="@Model.Id" Class="alert-dark" FullWidth="true"></MatTextField>

                </div>
                <div class="form-group">
                    <MatTextField Label="Title" @bind-Value="@Model.Title" Class="alert-dark" FullWidth="true"></MatTextField>

                </div>
                <div class="form-group">
                    <MatTextField Label="Content" @bind-Value="@Model.Content" Class="alert-dark" FullWidth="true"></MatTextField>

                </div>

                <div class="form-group">

                    <MatButton Type="buttun" Raised="true" OnClick="@Delete_btn">Delete</MatButton>
                    <MatButton Type="submit" Link="/Articles" Raised="true" Style="background-color:brown">List</MatButton>
                </div>
            </EditForm>

        </div>
    </div>
</div>

@code {

    [Parameter]
    public int Id { get; set; }

    [Parameter]
    public Article Model { get; set; } = new Article();

    protected override async Task OnInitializedAsync()
    {
        Model = await repository.GetArticleByIdAsync(Id);
    }

    protected async void Delete_btn()
    {
        bool isDelete = await JS.InvokeAsync<bool>("confirm", $"{Id}글을 정말로 삭제하시겠습니까?");

        if (isDelete)
        {
            await repository.DeleteArticleAsync(Id);
            NavigationManager.NavigateTo($"/Articles");
        }
        else
        {
            //window.alert("")
            await JS.InvokeAsync<object>("alert", "취소되었습니다.");
        }
    }

    protected void Edit_btn()
    {
        NavigationManager.NavigateTo($"/Articles/Edit/{Id}");
    }
   
}
